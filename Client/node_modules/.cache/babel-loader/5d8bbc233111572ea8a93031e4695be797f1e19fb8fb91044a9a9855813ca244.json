{"ast":null,"code":"// userData = {email: \"\",\n//             password: \"\",\n//          }\nconst validation = (userData, errors, setErrors) => {\n  const emailRegex = /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$/;\n  if (!userData.email) {\n    setErrors({\n      ...errors,\n      email: \"Falta completar este campo\"\n    });\n  } else if (userData.email.length > 35) {\n    setErrors({\n      ...errors,\n      email: \"No está permitido emails de más de 35 caracteres.\"\n    });\n  } else if (!emailRegex.test(userData.email)) {\n    setErrors({\n      ...errors,\n      email: \"Este no es un email valido\"\n    });\n  } else {\n    setErrors({\n      ...errors,\n      email: \"\"\n    });\n  }\n  if (!/\\d/.test(userData.password)) {\n    setErrors({\n      ...errors,\n      password: \"La contraseña debe contener al menos un numero\"\n    });\n  } else if (!/^.{6,}$/.test(userData.password)) {\n    setErrors({\n      ...errors,\n      password: \"La contraseña debe contener al menos 6 caracteres\"\n    });\n  } else if (!/^.{,10}$/.test(userData.password)) {\n    setErrors({\n      ...errors,\n      password: \"La contraseña debe contener menos de 10 caracteres\"\n    });\n  } else {\n    setErrors({\n      ...errors,\n      password: \"\"\n    });\n  }\n};\nexport default validation;","map":{"version":3,"names":["validation","userData","errors","setErrors","emailRegex","email","length","test","password"],"sources":["C:/Users/cesar/Desktop/Escritorio 1/App Rick and Morty/rick_and_morty_github/appRickAndMorty2/appRickAndMorty/src/components/Form/validation.js"],"sourcesContent":["// userData = {email: \"\",\r\n//             password: \"\",\r\n//          }\r\nconst validation = (userData, errors, setErrors) => {\r\n  const emailRegex = /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,}$/;\r\n  if (!userData.email) {\r\n    setErrors({ ...errors, email: \"Falta completar este campo\" });\r\n  } else if (userData.email.length > 35) {\r\n    setErrors({\r\n      ...errors,\r\n      email: \"No está permitido emails de más de 35 caracteres.\",\r\n    });\r\n  } else if (!emailRegex.test(userData.email)) {\r\n    setErrors({ ...errors, email: \"Este no es un email valido\" });\r\n  } else {\r\n    setErrors({ ...errors, email: \"\" });\r\n  }\r\n  if (!/\\d/.test(userData.password)) {\r\n    setErrors({\r\n      ...errors,\r\n      password: \"La contraseña debe contener al menos un numero\",\r\n    });\r\n  } else if (!/^.{6,}$/.test(userData.password)) {\r\n    setErrors({\r\n      ...errors,\r\n      password: \"La contraseña debe contener al menos 6 caracteres\",\r\n    });\r\n  } else if (!/^.{,10}$/.test(userData.password)) {\r\n    setErrors({\r\n      ...errors,\r\n      password: \"La contraseña debe contener menos de 10 caracteres\",\r\n    });\r\n  } else {\r\n    setErrors({ ...errors, password: \"\" });\r\n  }\r\n};\r\n\r\nexport default validation;\r\n"],"mappings":"AAAA;AACA;AACA;AACA,MAAMA,UAAU,GAAGA,CAACC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,KAAK;EAClD,MAAMC,UAAU,GAAG,kDAAkD;EACrE,IAAI,CAACH,QAAQ,CAACI,KAAK,EAAE;IACnBF,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAEG,KAAK,EAAE;IAA6B,CAAC,CAAC;EAC/D,CAAC,MAAM,IAAIJ,QAAQ,CAACI,KAAK,CAACC,MAAM,GAAG,EAAE,EAAE;IACrCH,SAAS,CAAC;MACR,GAAGD,MAAM;MACTG,KAAK,EAAE;IACT,CAAC,CAAC;EACJ,CAAC,MAAM,IAAI,CAACD,UAAU,CAACG,IAAI,CAACN,QAAQ,CAACI,KAAK,CAAC,EAAE;IAC3CF,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAEG,KAAK,EAAE;IAA6B,CAAC,CAAC;EAC/D,CAAC,MAAM;IACLF,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAEG,KAAK,EAAE;IAAG,CAAC,CAAC;EACrC;EACA,IAAI,CAAC,IAAI,CAACE,IAAI,CAACN,QAAQ,CAACO,QAAQ,CAAC,EAAE;IACjCL,SAAS,CAAC;MACR,GAAGD,MAAM;MACTM,QAAQ,EAAE;IACZ,CAAC,CAAC;EACJ,CAAC,MAAM,IAAI,CAAC,SAAS,CAACD,IAAI,CAACN,QAAQ,CAACO,QAAQ,CAAC,EAAE;IAC7CL,SAAS,CAAC;MACR,GAAGD,MAAM;MACTM,QAAQ,EAAE;IACZ,CAAC,CAAC;EACJ,CAAC,MAAM,IAAI,CAAC,UAAU,CAACD,IAAI,CAACN,QAAQ,CAACO,QAAQ,CAAC,EAAE;IAC9CL,SAAS,CAAC;MACR,GAAGD,MAAM;MACTM,QAAQ,EAAE;IACZ,CAAC,CAAC;EACJ,CAAC,MAAM;IACLL,SAAS,CAAC;MAAE,GAAGD,MAAM;MAAEM,QAAQ,EAAE;IAAG,CAAC,CAAC;EACxC;AACF,CAAC;AAED,eAAeR,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}