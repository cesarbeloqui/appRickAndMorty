{"ast":null,"code":"import { ADD_FAV, FILTER, REMOVE_FAV, ORDER, GET_FAV } from \"./action-type\";\nconst initialState = {\n  myFavorites: [],\n  // = [{character1} , {character2} , {character3}]\n  allCharacters: []\n};\nconst rootReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case ADD_FAV:\n      return {\n        ...state,\n        myFavorites: action.payload,\n        allCharacters: action.payload\n      };\n    case ADD_FAV:\n      return {\n        ...state,\n        myFavorites: action.payload,\n        allCharacters: action.payload\n      };\n    case REMOVE_FAV:\n      return {\n        ...state,\n        myFavorites: action.payload,\n        allCharacters: action.payload\n      };\n    case FILTER:\n      let copy2 = state.allCharacters;\n      if (action.payload !== \"All\") {\n        let copy3 = copy2.filter(character => character.gender === action.payload);\n        return {\n          ...state,\n          myFavorites: copy3\n        };\n      } else {\n        return {\n          ...state,\n          myFavorites: [...state.allCharacters]\n        };\n      }\n    case ORDER:\n      const copy3 = state.allCharacters.sort((a, b) => {\n        if (action.payload === \"A\") {\n          if (a.id < b.id) return -1;\n          if (a.id > b.id) return 1;\n          return 0;\n        } else {\n          if (a.id < b.id) return 1;\n          if (a.id > b.id) return -1;\n          return 0;\n        }\n      });\n      return {\n        ...state,\n        myFavorites: copy3\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};\nexport default rootReducer;","map":{"version":3,"names":["ADD_FAV","FILTER","REMOVE_FAV","ORDER","GET_FAV","initialState","myFavorites","allCharacters","rootReducer","state","arguments","length","undefined","action","type","payload","copy2","copy3","filter","character","gender","sort","a","b","id"],"sources":["C:/Users/cesar/Desktop/Escritorio 1/App Rick and Morty/rick_and_morty_github/appRickAndMorty2/appRickAndMorty/Client/src/redux/reducer.js"],"sourcesContent":["import { ADD_FAV, FILTER, REMOVE_FAV, ORDER , GET_FAV } from \"./action-type\";\r\n\r\nconst initialState = {\r\n  myFavorites: [], // = [{character1} , {character2} , {character3}]\r\n  allCharacters: [],\r\n};\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_FAV:\r\n      return {\r\n        ...state,\r\n        myFavorites: action.payload,\r\n        allCharacters: action.payload,\r\n      };\r\n    case ADD_FAV:\r\n      return {\r\n        ...state,\r\n        myFavorites: action.payload,\r\n        allCharacters: action.payload,\r\n      };\r\n    case REMOVE_FAV:\r\n      return {\r\n        ...state,\r\n        myFavorites: action.payload,\r\n        allCharacters: action.payload,\r\n      };\r\n    case FILTER:\r\n      let copy2 = state.allCharacters;\r\n      if (action.payload !== \"All\") {\r\n        let copy3 = copy2.filter(\r\n          (character) => character.gender === action.payload\r\n        );\r\n        return { ...state, myFavorites: copy3 };\r\n      } else {\r\n        return { ...state, myFavorites: [...state.allCharacters] };\r\n      }\r\n    case ORDER:\r\n      const copy3 = state.allCharacters.sort((a, b) => {\r\n        if (action.payload === \"A\") {\r\n          if (a.id < b.id) return -1;\r\n          if (a.id > b.id) return 1;\r\n          return 0;\r\n        } else {\r\n          if (a.id < b.id) return 1;\r\n          if (a.id > b.id) return -1;\r\n          return 0;\r\n        }\r\n      });\r\n      return { ...state, myFavorites: copy3 };\r\n    default:\r\n      return { ...state };\r\n  }\r\n};\r\n\r\nexport default rootReducer;\r\n"],"mappings":"AAAA,SAASA,OAAO,EAAEC,MAAM,EAAEC,UAAU,EAAEC,KAAK,EAAGC,OAAO,QAAQ,eAAe;AAE5E,MAAMC,YAAY,GAAG;EACnBC,WAAW,EAAE,EAAE;EAAE;EACjBC,aAAa,EAAE;AACjB,CAAC;AAED,MAAMC,WAAW,GAAG,SAAAA,CAAA,EAAkC;EAAA,IAAjCC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAAGL,YAAY;EAAA,IAAEQ,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EAC/C,QAAQC,MAAM,CAACC,IAAI;IACjB,KAAKd,OAAO;MACV,OAAO;QACL,GAAGS,KAAK;QACRH,WAAW,EAAEO,MAAM,CAACE,OAAO;QAC3BR,aAAa,EAAEM,MAAM,CAACE;MACxB,CAAC;IACH,KAAKf,OAAO;MACV,OAAO;QACL,GAAGS,KAAK;QACRH,WAAW,EAAEO,MAAM,CAACE,OAAO;QAC3BR,aAAa,EAAEM,MAAM,CAACE;MACxB,CAAC;IACH,KAAKb,UAAU;MACb,OAAO;QACL,GAAGO,KAAK;QACRH,WAAW,EAAEO,MAAM,CAACE,OAAO;QAC3BR,aAAa,EAAEM,MAAM,CAACE;MACxB,CAAC;IACH,KAAKd,MAAM;MACT,IAAIe,KAAK,GAAGP,KAAK,CAACF,aAAa;MAC/B,IAAIM,MAAM,CAACE,OAAO,KAAK,KAAK,EAAE;QAC5B,IAAIE,KAAK,GAAGD,KAAK,CAACE,MAAM,CACrBC,SAAS,IAAKA,SAAS,CAACC,MAAM,KAAKP,MAAM,CAACE,OAAO,CACnD;QACD,OAAO;UAAE,GAAGN,KAAK;UAAEH,WAAW,EAAEW;QAAM,CAAC;MACzC,CAAC,MAAM;QACL,OAAO;UAAE,GAAGR,KAAK;UAAEH,WAAW,EAAE,CAAC,GAAGG,KAAK,CAACF,aAAa;QAAE,CAAC;MAC5D;IACF,KAAKJ,KAAK;MACR,MAAMc,KAAK,GAAGR,KAAK,CAACF,aAAa,CAACc,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;QAC/C,IAAIV,MAAM,CAACE,OAAO,KAAK,GAAG,EAAE;UAC1B,IAAIO,CAAC,CAACE,EAAE,GAAGD,CAAC,CAACC,EAAE,EAAE,OAAO,CAAC,CAAC;UAC1B,IAAIF,CAAC,CAACE,EAAE,GAAGD,CAAC,CAACC,EAAE,EAAE,OAAO,CAAC;UACzB,OAAO,CAAC;QACV,CAAC,MAAM;UACL,IAAIF,CAAC,CAACE,EAAE,GAAGD,CAAC,CAACC,EAAE,EAAE,OAAO,CAAC;UACzB,IAAIF,CAAC,CAACE,EAAE,GAAGD,CAAC,CAACC,EAAE,EAAE,OAAO,CAAC,CAAC;UAC1B,OAAO,CAAC;QACV;MACF,CAAC,CAAC;MACF,OAAO;QAAE,GAAGf,KAAK;QAAEH,WAAW,EAAEW;MAAM,CAAC;IACzC;MACE,OAAO;QAAE,GAAGR;MAAM,CAAC;EAAC;AAE1B,CAAC;AAED,eAAeD,WAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}